require 'rubygems'
require 'bundler/setup'
require 'httparty'
require 'thread'

module EpiAtomRetriever
  extend self

  def get_atom(zipcode, distance, categories)
    assert_server_has_curl
    resource_url = resource_url_with_params(zipcode, distance, categories)

    atom_pages, current_count = [], 25

    puts "Getting initial resultset"
    atom, results_left = atom_retriever(resource_url, basic_auth_hash)
    puts "Gathered some atom, there are still #{results_left} left to go"
    atom_pages << atom

    while results_left > 0
      puts "Getting paged resultset"
      paged_url = [resource_url, "start-index=#{current_count}"].join("&")
      atom, results_left = atom_retriever(paged_url, basic_auth_hash)
      puts "Gathered some atom, there are still #{results_left} left to go"
      current_count = current_count + 25
      atom_pages << atom
      sleep 5
    end

    atom_pages
  end
  alias_method :call, :get_atom

private

  def result_count(atom)
    atom.match(/resultCount count="(\d+)"/)[1].to_i
  end

  def resource_url_with_params(zipcode, distance, categories)
    [base_url, resource_params(zipcode, distance, categories)].join("?")
  end

  def resource_params(zipcode, distance, categories)
    ["location=#{zipcode}",
     "distance=#{distance}",
     *build_categories_params(categories)
    ].join("&")
  end

  def build_categories_params(categories)
    categories.map {|category| "category=#{category}" }
  end

  def assert_server_has_curl
    return unless `which curl` == ""
    raise "You need to install curl on this server"
  end

  def atom_retriever(url, auth)
    atom = HTTParty.get(url, auth)
    [atom, result_count(atom)]
  end

  def base_url
    "http://api.entertainment.com/AtomServer3/feeds/offers?uuid=#{@current_uuid}"
  end

  def basic_auth_hash
    { basic_auth: { username: "INFO@SISK.COM", password: "T1aPw4SjF" } }
  end

end

